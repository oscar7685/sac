package naval.dominio;
// Generated 12/01/2016 11:21:10 AM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Solicitud generated by hbm2java
 */
@Entity
@Table(name = "solicitud", catalog = "naval"
)
public class Solicitud implements java.io.Serializable {

    private Integer idsolicitud;
    private Aula aula;
    private Usuario usuario;
    private String solicitud;
    private Date fecha;
    private Set<Mantenimiento> mantenimientos = new HashSet<Mantenimiento>(0);

    public Solicitud() {
    }

    public Solicitud(Aula aula, Usuario usuario, String solicitud, Date fecha) {
        this.aula = aula;
        this.usuario = usuario;
        this.solicitud = solicitud;
        this.fecha = fecha;
    }

    public Solicitud(Aula aula, Usuario usuario, String solicitud, Date fecha, Set<Mantenimiento> mantenimientos) {
        this.aula = aula;
        this.usuario = usuario;
        this.solicitud = solicitud;
        this.fecha = fecha;
        this.mantenimientos = mantenimientos;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "idsolicitud", unique = true, nullable = false)
    public Integer getIdsolicitud() {
        return this.idsolicitud;
    }

    public void setIdsolicitud(Integer idsolicitud) {
        this.idsolicitud = idsolicitud;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "aula_idaula", nullable = false)
    public Aula getAula() {
        return this.aula;
    }

    public void setAula(Aula aula) {
        this.aula = aula;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "solicitante", nullable = false)
    public Usuario getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    @Column(name = "solicitud", nullable = false, length = 2000)
    public String getSolicitud() {
        return this.solicitud;
    }

    public void setSolicitud(String solicitud) {
        this.solicitud = solicitud;
    }

    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd HH:mm", timezone = "America/Bogota")
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fecha", nullable = false, length = 19)
    public Date getFecha() {
        return this.fecha;
    }

    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

    @JsonIgnore
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "solicitud")
    public Set<Mantenimiento> getMantenimientos() {
        return this.mantenimientos;
    }

    public void setMantenimientos(Set<Mantenimiento> mantenimientos) {
        this.mantenimientos = mantenimientos;
    }

}
