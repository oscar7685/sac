package naval.dominio;



import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Notificacion generated by hbm2java
 */
@Entity
@Table(name="notificacion"
    ,catalog="naval"
)
public class Notificacion  implements java.io.Serializable {


     private Integer idnotificacion;
     private Usuario usuario;
     private String tipo;
     private Date fechaEvento;
     private Set<Usuario> usuarios = new HashSet<Usuario>(0);

    public Notificacion() {
    }

	
    public Notificacion(Usuario usuario, String tipo, Date fechaEvento) {
        this.usuario = usuario;
        this.tipo = tipo;
        this.fechaEvento = fechaEvento;
    }
    public Notificacion(Usuario usuario, String tipo, Date fechaEvento, Set<Usuario> usuarios) {
       this.usuario = usuario;
       this.tipo = tipo;
       this.fechaEvento = fechaEvento;
       this.usuarios = usuarios;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idnotificacion", unique=true, nullable=false)
    public Integer getIdnotificacion() {
        return this.idnotificacion;
    }
    
    public void setIdnotificacion(Integer idnotificacion) {
        this.idnotificacion = idnotificacion;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="usuario_realizador", nullable=false)
    public Usuario getUsuario() {
        return this.usuario;
    }
    
    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    
    @Column(name="tipo", nullable=false, length=45)
    public String getTipo() {
        return this.tipo;
    }
    
    public void setTipo(String tipo) {
        this.tipo = tipo;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fecha_evento", nullable=false, length=19)
    public Date getFechaEvento() {
        return this.fechaEvento;
    }
    
    public void setFechaEvento(Date fechaEvento) {
        this.fechaEvento = fechaEvento;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="notificacion_has_usuario", catalog="naval", joinColumns = { 
        @JoinColumn(name="notificacion_idnotificacion", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="usuario_lector", nullable=false, updatable=false) })
    public Set<Usuario> getUsuarios() {
        return this.usuarios;
    }
    
    public void setUsuarios(Set<Usuario> usuarios) {
        this.usuarios = usuarios;
    }




}


