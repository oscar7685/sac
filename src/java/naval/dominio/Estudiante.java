package naval.dominio;



import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Estudiante generated by hbm2java
 */
@Entity
@Table(name="estudiante"
    ,catalog="naval"
)
public class Estudiante  implements java.io.Serializable {


     private Integer codigo;
     private String nombres;
     private String apellidos;
     private Set<Curso> cursos = new HashSet<Curso>(0);
     private Set<Curso> cursos_1 = new HashSet<Curso>(0);

    public Estudiante() {
    }

    public Estudiante(String nombres, String apellidos, Set<Curso> cursos, Set<Curso> cursos_1) {
       this.nombres = nombres;
       this.apellidos = apellidos;
       this.cursos = cursos;
       this.cursos_1 = cursos_1;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="codigo", unique=true, nullable=false)
    public Integer getCodigo() {
        return this.codigo;
    }
    
    public void setCodigo(Integer codigo) {
        this.codigo = codigo;
    }

    
    @Column(name="nombres")
    public String getNombres() {
        return this.nombres;
    }
    
    public void setNombres(String nombres) {
        this.nombres = nombres;
    }

    
    @Column(name="apellidos")
    public String getApellidos() {
        return this.apellidos;
    }
    
    public void setApellidos(String apellidos) {
        this.apellidos = apellidos;
    }
@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="estudiante_has_curso", catalog="naval", joinColumns = { 
        @JoinColumn(name="estudiante_codigo", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="curso_idcurso", nullable=false, updatable=false) })
    public Set<Curso> getCursos() {
        return this.cursos;
    }
    
    public void setCursos(Set<Curso> cursos) {
        this.cursos = cursos;
    }
@JsonIgnore
@OneToMany(fetch=FetchType.LAZY, mappedBy="estudiante")
    public Set<Curso> getCursos_1() {
        return this.cursos_1;
    }
    
    public void setCursos_1(Set<Curso> cursos_1) {
        this.cursos_1 = cursos_1;
    }




}


