package naval.dominio;

import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Curso generated by hbm2java
 */
@Entity
@Table(name = "curso", catalog = "naval"
)
public class Curso implements java.io.Serializable {

    private Integer idcurso;
    private Aula aula;
    private Estudiante estudiante;
    private Programa programa;
    private Integer anio;
    private Integer periodo;
    private String codigo;
    private Set<ActividadDocencia> actividadDocencias = new HashSet<ActividadDocencia>(0);
    private Set<ParteDiario> parteDiarios = new HashSet<ParteDiario>(0);
    private Set<Estudiante> estudiantes = new HashSet<Estudiante>(0);
    private Set<Horario> horarios = new HashSet<Horario>(0);

    public Curso() {
    }

    public Curso(Programa programa, String codigo) {
        this.programa = programa;
        this.codigo = codigo;
    }

    public Curso(Aula aula, Estudiante estudiante, Programa programa, Integer anio, Integer periodo, String codigo, Set<ActividadDocencia> actividadDocencias, Set<ParteDiario> parteDiarios, Set<Estudiante> estudiantes, Set<Horario> horarios) {
        this.aula = aula;
        this.estudiante = estudiante;
        this.programa = programa;
        this.anio = anio;
        this.periodo = periodo;
        this.codigo = codigo;
        this.actividadDocencias = actividadDocencias;
        this.parteDiarios = parteDiarios;
        this.estudiantes = estudiantes;
        this.horarios = horarios;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "idcurso", unique = true, nullable = false)
    public Integer getIdcurso() {
        return this.idcurso;
    }

    public void setIdcurso(Integer idcurso) {
        this.idcurso = idcurso;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "aula_idaula")
    public Aula getAula() {
        return this.aula;
    }

    public void setAula(Aula aula) {
        this.aula = aula;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "comandante_curso")
    public Estudiante getEstudiante() {
        return this.estudiante;
    }

    public void setEstudiante(Estudiante estudiante) {
        this.estudiante = estudiante;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "programa_idprograma", nullable = false)
    public Programa getPrograma() {
        return this.programa;
    }

    public void setPrograma(Programa programa) {
        this.programa = programa;
    }

    @Column(name = "anio")
    public Integer getAnio() {
        return this.anio;
    }

    public void setAnio(Integer anio) {
        this.anio = anio;
    }

    @Column(name = "periodo")
    public Integer getPeriodo() {
        return this.periodo;
    }

    public void setPeriodo(Integer periodo) {
        this.periodo = periodo;
    }

    @Column(name = "codigo", nullable = false, length = 45)
    public String getCodigo() {
        return this.codigo;
    }

    public void setCodigo(String codigo) {
        this.codigo = codigo;
    }
    @JsonIgnore
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "curso")
    public Set<ActividadDocencia> getActividadDocencias() {
        return this.actividadDocencias;
    }

    public void setActividadDocencias(Set<ActividadDocencia> actividadDocencias) {
        this.actividadDocencias = actividadDocencias;
    }

    @JsonIgnore
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "curso")
    public Set<ParteDiario> getParteDiarios() {
        return this.parteDiarios;
    }

    public void setParteDiarios(Set<ParteDiario> parteDiarios) {
        this.parteDiarios = parteDiarios;
    }
    @JsonIgnore
    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "estudiante_has_curso", catalog = "naval", joinColumns = {
        @JoinColumn(name = "curso_idcurso", nullable = false, updatable = false)}, inverseJoinColumns = {
        @JoinColumn(name = "estudiante_codigo", nullable = false, updatable = false)})
    public Set<Estudiante> getEstudiantes() {
        return this.estudiantes;
    }

    public void setEstudiantes(Set<Estudiante> estudiantes) {
        this.estudiantes = estudiantes;
    }
    @JsonIgnore
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "curso")
    public Set<Horario> getHorarios() {
        return this.horarios;
    }

    public void setHorarios(Set<Horario> horarios) {
        this.horarios = horarios;
    }

}
