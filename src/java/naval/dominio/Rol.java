package naval.dominio;
// Generated 21/12/2015 11:03:03 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Rol generated by hbm2java
 */
@Entity
@Table(name="rol"
    ,catalog="naval"
)
public class Rol  implements java.io.Serializable {


     private int codigo;
     private String descripcion;
     private Set<Usuario> usuarios = new HashSet<Usuario>(0);
     private Set<Permisos> permisoses = new HashSet<Permisos>(0);

    public Rol() {
    }

	
    public Rol(int codigo, String descripcion) {
        this.codigo = codigo;
        this.descripcion = descripcion;
    }
    public Rol(int codigo, String descripcion, Set<Usuario> usuarios, Set<Permisos> permisoses) {
       this.codigo = codigo;
       this.descripcion = descripcion;
       this.usuarios = usuarios;
       this.permisoses = permisoses;
    }
   
     @Id 

    
    @Column(name="codigo", unique=true, nullable=false)
    public int getCodigo() {
        return this.codigo;
    }
    
    public void setCodigo(int codigo) {
        this.codigo = codigo;
    }

    
    @Column(name="descripcion", nullable=false)
    public String getDescripcion() {
        return this.descripcion;
    }
    
    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="rol")
    public Set<Usuario> getUsuarios() {
        return this.usuarios;
    }
    
    public void setUsuarios(Set<Usuario> usuarios) {
        this.usuarios = usuarios;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="rol_has_permisos", catalog="naval", joinColumns = { 
        @JoinColumn(name="rol_codigo", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="permisos_idpermisos", nullable=false, updatable=false) })
    public Set<Permisos> getPermisoses() {
        return this.permisoses;
    }
    
    public void setPermisoses(Set<Permisos> permisoses) {
        this.permisoses = permisoses;
    }




}


